<<<<<<< HEAD
# bash programmable completion for gamingcoind(1)
=======
# bash programmable completion for freicoind(1)
>>>>>>> ee23e385352666a9dea1e04f2036e3c5e7155149
# Copyright (c) 2012 Christian von Roques <roques@mti.ag>
# Distributed under the MIT/X11 software license, see the accompanying
# file COPYING or http://www.opensource.org/licenses/mit-license.php.

<<<<<<< HEAD
have gamingcoind && {

# call $gamingcoind for RPC
_gamingcoin_rpc() {
=======
have freicoind && {

# call $freicoind for RPC
_freicoin_rpc() {
>>>>>>> ee23e385352666a9dea1e04f2036e3c5e7155149
    # determine already specified args necessary for RPC
    local rpcargs=()
    for i in ${COMP_LINE}; do
        case "$i" in
            -conf=*|-proxy*|-rpc*)
                rpcargs=( "${rpcargs[@]}" "$i" )
                ;;
        esac
    done
<<<<<<< HEAD
    $gamingcoind "${rpcargs[@]}" "$@"
}

# Add gamingcoin accounts to COMPREPLY
_gamingcoin_accounts() {
    local accounts
    accounts=$(_gamingcoin_rpc listaccounts | awk '/".*"/ { a=$1; gsub(/"/, "", a); print a}')
    COMPREPLY=( "${COMPREPLY[@]}" $( compgen -W "$accounts" -- "$cur" ) )
}

_gamingcoind() {
    local cur prev words=() cword
    local gamingcoind

    # save and use original argument to invoke gamingcoind
    # gamingcoind might not be in $PATH
    gamingcoind="$1"
=======
    $freicoind "${rpcargs[@]}" "$@"
}

# Add freicoin accounts to COMPREPLY
_freicoin_accounts() {
    local accounts
    accounts=$(_freicoin_rpc listaccounts | awk '/".*"/ { a=$1; gsub(/"/, "", a); print a}')
    COMPREPLY=( "${COMPREPLY[@]}" $( compgen -W "$accounts" -- "$cur" ) )
}

_freicoind() {
    local cur prev words=() cword
    local freicoind

    # save and use original argument to invoke freicoind
    # freicoind might not be in $PATH
    freicoind="$1"
>>>>>>> ee23e385352666a9dea1e04f2036e3c5e7155149

    COMPREPLY=()
    _get_comp_words_by_ref -n = cur prev words cword

    if ((cword > 2)); then
        case ${words[cword-2]} in
            listreceivedbyaccount|listreceivedbyaddress)
                COMPREPLY=( $( compgen -W "true false" -- "$cur" ) )
                return 0
                ;;
            move|setaccount)
<<<<<<< HEAD
                _gamingcoin_accounts
=======
                _freicoin_accounts
>>>>>>> ee23e385352666a9dea1e04f2036e3c5e7155149
                return 0
                ;;
        esac
    fi

    case "$prev" in
        backupwallet)
            _filedir
            return 0
            ;;
        setgenerate)
            COMPREPLY=( $( compgen -W "true false" -- "$cur" ) )
            return 0
            ;;
        getaccountaddress|getaddressesbyaccount|getbalance|getnewaddress|getreceivedbyaccount|listtransactions|move|sendfrom|sendmany)
<<<<<<< HEAD
            _gamingcoin_accounts
=======
            _freicoin_accounts
>>>>>>> ee23e385352666a9dea1e04f2036e3c5e7155149
            return 0
            ;;
    esac

    case "$cur" in
        -conf=*|-pid=*|-rpcsslcertificatechainfile=*|-rpcsslprivatekeyfile=*)
            cur="${cur#*=}"
            _filedir
            return 0
            ;;
        -datadir=*)
            cur="${cur#*=}"
            _filedir -d
            return 0
            ;;
        -*=*)	# prevent nonsense completions
            return 0
            ;;
        *)
            local helpopts commands

            # only parse --help if senseful
            if [[ -z "$cur" || "$cur" =~ ^- ]]; then
<<<<<<< HEAD
                helpopts=$($gamingcoind --help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, "="); print $1 }' )
=======
                helpopts=$($freicoind --help 2>&1 | awk '$1 ~ /^-/ { sub(/=.*/, "="); print $1 }' )
>>>>>>> ee23e385352666a9dea1e04f2036e3c5e7155149
            fi

            # only parse help if senseful
            if [[ -z "$cur" || "$cur" =~ ^[a-z] ]]; then
<<<<<<< HEAD
                commands=$(_gamingcoin_rpc help 2>/dev/null | awk '{ print $1; }')
=======
                commands=$(_freicoin_rpc help 2>/dev/null | awk '{ print $1; }')
>>>>>>> ee23e385352666a9dea1e04f2036e3c5e7155149
            fi

            COMPREPLY=( $( compgen -W "$helpopts $commands" -- "$cur" ) )

            # Prevent space if an argument is desired
            if [[ $COMPREPLY == *= ]]; then
                compopt -o nospace
            fi
            return 0
            ;;
    esac
}

<<<<<<< HEAD
complete -F _gamingcoind gamingcoind
=======
complete -F _freicoind freicoind
>>>>>>> ee23e385352666a9dea1e04f2036e3c5e7155149
}

# Local variables:
# mode: shell-script
# sh-basic-offset: 4
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: ts=4 sw=4 et filetype=sh
